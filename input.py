
import sys
import zlib
import base64
import marshal
import hashlib
from itertools import cycle


from itertools import cycle

def custom_decode(data, salt='yCcxbRbd2TR92ZQA', magic=6961):
    result = bytearray()
    for b, salt_char in zip(data, cycle(salt.encode())):
        result.append((b - salt_char - magic) % 256)
    return bytes(result)


def decrypt(data='B2Fn}?vI7<`Kx)!F*vYAAD+=xhtJv4s0b9-{T;DNuuZHS#G9^|N#};NW2T+eT6OcO76i<wxVaqCg@6vMRPsRa-0n3FOhM2NN5~Q9@VnlWD%~9^`W`v}sT?Hmv~xX@JytN@skV7UK|xte6=PAKZEmLTVoV-ce=2`1oKr#wcWMG*nrq%+Fn8Hkg-vf5UiwB1LK||?Qds#&(OM6b=60rl_Im123d()fpbd?JVqss?;(SSDMF9VB(WA|%by{_lM{+J;Svu_D3C0>2Gg6XbD$jZ?iZP&D$x?$=ehOljj=zXyI7UGegl{8LaN>8gAb@-YUS{DgqieA!P)w44z<Gh8Qi)CJl`DFLG619!T_EaVA}rWdcXKOy!U%E-y7WRlL2@yDsT^#P*nuugH8A3tNNIlAX>&7YX97<WA3#E7Dtd9@O=E<mc6t)>OLABvB7SWtVUtoKHbIPzK0NYhtYv;mici9wiAD}=J;);F+k(|rZO?mb?toT|!KgTz5geEJNia+&g%&aqSRCS-#GktDMR8x4#5qVzMd(9F;kv+fwMXu*YUYRNDZ($_n(qN@m20!G$>;HTVt-oMVSpVWh;W8<ac+;a2E=%2$aRtNru%2;iGmK1dR&44V0v01sj`lCg5&a(dw^JxLdbz%@i{f1vcX1+4hZb$TYud*=<s8MGQYlMhLHV<-zN!DO&(Ra(z%S2zA8LQ(nw5!>1-l5RPs_Y-+{4~;9qPV;q!`)0)mf_VsU<HR}ukcZ6j_dkp{w4K6QfJVCsQrsc568dIEz_V1G_Xn!0@Th^y0)kaZ^WQz)8YO-2}FbJH#PdT>f>V0&~h--7zxX!B5{fp7nGVN18@RC&SP4D%7!5_FN&FLvFj0*9GlD5rOz3O)i(<)p|-UYHSUlhZ4uGD08|Q=+h`UJA8Rac_L^a<qahP=ZVqdWvL8=j{-?kbBMt;bLWH_DZ8!eOwD?hG0T)Aq0JCyPYBDA8I=oaTA7^L-`S>$eExgg%n9bVzHoN)}<T<qM$2CEfF^<DI{!9o$hoE&Zcb$v>A{~*VI23?;>%Y<W4lGQ)GIPBt>850o1_D4(qcI=(7Dzn+iUwj&`q&S&kLu9mCnqA-+&c>u8<1O_Ocnzvyshp(NMO9g9Nn%N5R`@a9>#XUT5^$3z>)Sd9Tf<WR+%54ukAjKrAOUJ3c^;v)m2IA4{QDV>;W(<Q%Vgx>+1E4W*3e>0UVb-z5zJItU2wr&YfI8`l>y{VF>M22z4uwazOoqFy@#{zHxpNIRmp6&9o#sMs(Zr*9mp)kRN{d@nVRaon~v(Z*bxq7k<+X`@ZC|daN9dnLAhXC*XE>m$~(%9}K5?^LcVv#6!czNf}zt_kB|AEM9RA{W_;#i;pE2|fE?t!O{-FGK%+~d39;3e1z$$J3kH)P&SP|=SFF#0XQpeXc+BJoyk3C=7!7D(~P+i@7hO~Le){$2MniXmw(14bIYPK>FQTPilJ47m2!(UuusulyA5`jTaPlap?&pz>SnKP=RiyB*q{&M=M}VQ;l-23~G6sZzIMK2$yfFnZ!eLfQMG80b7b?iKh`H}YS@V?0?<Z8q&a0kun~1^hLNcp?|}m_08u8dWRSmLv{Xx*2y;N*+x?=@BZ%_5h7Q5a#91qC0v^Uu!%&35=mEf+ULphsQ;4PBvCTff-N)K^UKYBnI%2{6v)E__ab!Fu<>(<mwSAYvh}#9XM{+wE4@TQO^j64|F~kxB^u?2U+k>18Yr*d$6EYY<S`7F_WuXe6=%Uc~-VTC^}Q(A+@PR@SJ6B0xveZnUW}9B_YB|JJE0nZ<slK0r_S@(NC(g7-QsO!5}kjNRoL|T&uB;0#W}_%vxYC)$LHp<n>Obx^bW75mGcbgPdqw1AC1H{0=GW!E66X`C9kq?HUT2wJ~1BC>6{x{?eVt{$hncngEs~*y`eIDbNAJcujN`Q6(NIW(BZLP_ytxqY>;n>e2c(I=sY_K*5@4bhU~?&~sqd$l_~&FS5(N-QPe|u@bJ>zvCRdA0%T%1u+4@1=4W9r5Orwpy=(h<^1uR`}yYt(MFXb#-STr=%lCaaNmyGum%j@-FNj|i1)`E9$^WrcEoP%CYQ7X-950yD2&lS!An)I%|Dpt9y$(Y{`{Ve-ihc+W{gqf>yMb8@id=fv}hkEoZ!-}t4)_)7!eoif>FxAQLW^gz~J)ujU30UJdcWykXpN(+kNv4!7~QZ`9SxXbl<Rh8k+h89_KtsVCWGgIHgix_BU@-#NfZ7<3?OVL8ho?j__#-r`>=F3Fe;z0P1dm>fuX4(lPJP{817hmQ$X-1}j%CzV9{*leF<l!M+#Z|Dx;~fpz!TIicB@+M$t#(qAh<b|Nkzvae{hOWoWZX`LtHq~a9zr|hx-$FaNaXZ@yU5+xI9wJ_#37ubx=Ew8r&h!xnF#$>4098EvSi^6?MSpEP<^i+v~$o^$nhs!+>d^Pf#%PNXAO;eYuN%>_ea2$Y8RG}k)*acZkMDQRQ$@R`(t75^1@m!nl^tuWc&pZZ`G|uQpUh%u(MSniv&`X92tY$~&O2hcZ@9g4`szRMBht0N`HuL(}pH>pXvTOzvDv=o5<X0}?S=p=^O}Dh`tBlMMZ8#Upgr{S33lnoDlx>~1p5xSoOV2dJ2_6}-EF>2XaH{S=nv!o-sXB%mguF4RZu<JvzqZ^(b{;^&D2(dRZE)_skSE_?CT-_p{Jtat!GJQ+k)xpt193s&lc;F6NZ-1blVt|{Qo~!Dc}5qQtMMtWWT6SLf#Sg&YyDkU&cTigdt$BldUdoVxqR${;O$N4kE9zx6JPNJcml5aj~N*}xOgjIZ`Ux{4sE1sR1m?U?UyoBN&gos$n#2?Whr@wpnk^i;tX50=AeW{e1A*OP-$=p&<am>BTa?l;pJ=B<f#wBX$j`-2{Cl@&y1Z1^Ed#y{uip&M)h!`Bm=&y!Vp8$?N{xo1m^gX>Ue+LgRWNp%k$&=?lvx;rk*QID5=b?*w!s5aHrToBT4fKv;_LCGweZC-Zedr$rMVzf%m~Epi7;`8#V6hxM2l=y7<!6|1N3?c%Zr@-nRlD_-8$kDJJy~2(#if*;3eKgl%v>!3!(lK2{wN1N9#p%NzC2@UWfa=rR$VN=aW@18ZHgX?!VGoZ2|4)#4SD`hD}q6sg4-_A7)V;ntu+eHnM>Nk#%@rq+JvEN3BY`hQ#P!oU3Lo;v?d=JWyd2iRaMOmt6Vg2&0H8vVnZYk&tm|NV}58~1Y9Iq2JTvM{27Tg(+OT+f9qRjaA8zDMysYJ8@a0i+KS`E`lw<f}zu;{fadh@-Jel_G28)lS8l)Po+gy(TxLg5jn|<GgqVqfRxTdIxwQz*Tw#3rzr6vDW?9rY$rIo=8KMSx{rPPcCN`wLk#J$dC&ici6e|)Z-)QK9Q^vwi#^bY8)gyb$3Vy2qGQP6lG97>sP;et8hBdNMYpSmi!&`-i6NkWD*JUybJ4SD;baJx(o2q^O$CO5?(>9NcFeN0zrD3!4s$IiAn@GGSz$=Q_~AZ)o5ShtQPkF2>!C{;VT>k%2RK7&eKtE?C9B0q#r~vdGLz|E6v+GPT%nsYT6&HSg#7Zg!J-cT&a#kZ0gzgZ|@2+iXc!cOpU6SQBiY<6YVcf_O=<n^YP~<tJb)2FeB&fpIfzcf)cE^qou6TxMoXm2D40oGa!kn$#L-A2FX`Nw;7t)|6GgZY1}xB#a}2-&3G03ne_oE)#$@L#^d_pgBy+)2k7h1l3ZrCtxfcA9D3#>D<+-=A^0-;sD}y2jt>@pwWtZl#8K;=VMl!E8pi+M1v14N6ftQ1xMj_;g4%HQF(p+__s}Snj~A(kupGC@@y_y6l)8uEL(YF6|Em$y(+Wq?|3Om#{D=I-tUA((DWAy~MPcGX#hQNV8I~uZDGs3lNLzuQ1D~0CoVo{6@2a!i50pEROlWRg_SakFPbn}(lg2-D&~?C5J3o}W*&Gif&MO0IVEOq6uyRvg6x!|z@5%UE`z<+wPFeP38(rubAjlAoH+q612L)&uGi^}H>`|BdxtZMxpcL2C7Qosy`@`A=%DBxc+OfeSK5M4XALm{DbeK<&EB51WPv;Ox2$)xRT3{pDa~q2q_RPhF0OLCakvtHy^r5yEtskeXc;V@h)*t|Nu&O>Wx|Ql$$s|ea={;b`znU-90A>~lr<K53-s`kF`WV*enXA-C)Z?+iZMK9!-vbe$d<*V&w3hNs^uam#wBfVy*fvDH*D0b-ITFw)ppKvfP$$17$lEzmaBj@im-BGz2?<cX0QMU}z(R{Xv{|^ts$mz1!zQ}{1X)(ENZ9J$esUPFbO{k8Sr86i+0W|^f=#tx;v;p&m0#^rq0Bt}fP);0X#wfb{<WA}ZMCcbSt4Ma=okiC1^s|3OVho31|aTcMxo6SR|*07Kx|vbs`%yKqr{emeHn?N=2~NjK>nWOnZjUqGt<Dy>z@99ve>gnL^oW1y0Tt&6jdue=6;^sg1p}J7WxiFbWZ^T&O7;Vzg{u)kLB?|Z4_1(jhOg^e>aZ|y(>h>as?@?ZK>J;<TuxXsL0XX96e`uwaX-+CyinVVXaOJ+NeRkElfS$M8Cd9<nt<<G>v)*c0m%sP)WsgXS}OGkCZi+5%e0v3sQ+ZL|q8LJ(Jsd%SriXxvTkAI4$8n^avLml)Ey;=33?pa?vl_%(WT&^q_W_HE-nQI8TU`pZ&w-biv)KW0~U7DC}(j8Nqn?v2s3Wctyqsrlmnd#B#yf6yyg0j!vR*<;p%F&hh@=dd78IGYTf0Yb-<c1WAb2T+|g>Yxf>-Q_YxQdEvxZQ!U@#HlM9%K$N=RIe&)e0C*iCg4{NSs&MfeSU0!Uy2W)Pmx{Q|s)f*|973b(xW5Vqtr(<mK^Mlyy`F7XzM4HO-KHso8(;}e-7ZO_cJE}&W&F&ZF+VDao!7aFNVyhT^`0`5;1}xKK=td8m>#1o%XtPr1LEY8cG9n10Bd9AyFTlb&p^i<^VxE3jO3^XBv9+eAZ9p2MNoZqy<Hc}ME;vpU*H<tdhHg;Bur-nJVhNGTOU6~54Xmvi1E^ep5xbP7!?5!yP(?1^s&Fjv8%ITp4xIiM$EaUIoY%dlq3OIt7#LV%ruH8L!Z6ISM_1lvk~X>^04mLw1L$dUiy^sJhNMJRH`EHfiWN95_wN$0DeY}A*doB)-v&iTYU*MXMaCsBCNdHmC(saz|2tFAW5I{cg)kEI%70uSRwgpJ;TqSFpyv+WbZPZL1t85a6I2M$mzb~d%ff}SC#B4P+qrLPi{OJy-BsgraMr8CJNIj&2lzWGhsbscY%iUnY@Dc?I0*SumXkLG%txo7n+^2brmFk|J~BsHvK<wX}(9u>GL`b3!zM_e$So6>=|VU9-_ascS=vMVJ{jk%R2Sh2>9$y<U$GH$-diA7h-E!o95Y5KE5%)828P9@H2!L9`LK!qplNjJm~TSX<8V?5E!ndOz4<GuxmIRSz1+pbX9D%B>s+ELf|Eo$QSdpAaYFX&D_;NE&(A0%Nl0(J9-?yfgwpEfiNnJ)xhxTnK;PWA%Qq#s~w#V9~;I<?kVs^#dV?|F%U{scQS1MwowpQHdbb5o%}<afIVV6YRSJ-P)2g(7F?x%yzsb${PGl^V}Pt1-18B;{pewsVDIwlDgk>iecBl#x(#}6dLj9<w?0hUG2L5#$oSj}?!(jTlSEn(?Cl*);Rgo|Bt(YkQN0__v=?Krnj}e9AK)Bo_y>$>UdAqK&1A!Fs&4n}H;aY<EMB$OBltkg*0z5SvXh-JjAdm8VSKM{95UBV7z9XTi_(LeT6SMOBE|KtNCKDa_=00VbqziA+_Ovx@L!amfSv^+=HK}W>UA10rX%OGCjRh&6TG*sU6*kTOY;r766&p5bW<?G8P({Qn2i+6aqiG0;RIpg4}~Dx0~cRAmH2BgLwyJR76DcQy?wsNGn$?Ax;Ju2Enwr9y5Y}{WmqOjD)7z7oq2pRew)QyQ<fJB#OK!#zIO0tpKxUA`ib!jO^n-T4|<;WtJ6#3IpI!R@A^t75LTV3YBJnu07AatHs#Z#XOauj;ggt)Qj?#DkMqm@XCz?&>BvK8A+_k<ZHB!TplSRten6;jzDuq>gouDky)0e4DH%wASj!hFjvN1=@u=ET&3z18G0HX9o?#&%%+tZke;tDfanu6E!CD$9;QnHkx3CGe8#FkNEFlX($*|a+?tF;FR&|o$4n3%5ag4Fu#LAnABH5L9uzf!(xJ>9?)CB}sZP^e^<{M7JLvP#k)WaqFKn$e#Ov7SZ%|UNQq=GgI|BKp;WXk#BY=+qF&^7hEb*~TFdSp0%oVr2Wc2UkqfvKSZVuZ!)>chK-m=PHV{P{tzL|~%iLnkSjnEjZhMO3MB8X6cg`3=R{49OiQY?3jMf6x7du^JxVOvkY!GZ7y+SnYL&r%EE1{d7ZTNSH6e@9Z-74m)2Pe)u08^l+TP9srLf#_QxZNmS;rV)gx{FP(%MZ?%&-#+ab_7cp-5M-^)SClJ*+C9ott*oLlL{q2wmh|A#O7@yo$T?mD3kn6x4!4=*uF6<qy9z!4QcViy;!2Spj(8%uJ3MzoJag3C2=0RQ6xw-DNU-|_Tr)-bu{sw9!5}L69k!d#{Wmm(X^vtH7fcFs`B0K@tXI(Axe(GIXhd$v2Odx4PQ#WuQwYex*Co&j}ba_i6E^;IS(Dg4^be}v$KTmqs-5Y<=PXg}tgVS`16y(^jc+~*uPT-@^^L)0@@-eg?6d6=Y_|Bq!mavf|eRnJ$fwO2XQ=;W<7eZbn15!T1Pm>}{TmjKLiMH#m;%YKF&dz>d-mLbDRrX3}*#U;KZzn+Cx~S8?Z9lBN3c3ApOnmOx7;HTTKxzy?GT?W?-xx?66MF}^$ySrOOjurCka<aa_t4YiP<+Pif_hG@A&6>)KW&8Ih6xnqVI*m;HVIV;b!rVz$l}8pKD?qBjOa_AC=pfiy#F#jqyL20mE7S+5*i5rqBIx29|pGsI?sUvp*3e?hXCZ$!^*Qasst@~4)47lwcdnG0KScu*E)$lQ_q+(3ZoO_CGYMwF@AlW``>3MsgJ$j)`d1@LQ>@}j5Z&L2Bv3Fo<bMJ9q><a2T;J;6T{Ejd7U^W@$wFpQ_=Wc7wx%-Eo80(I@I|liNNh%KPf-*j?0U`<_BgkhCu}YTW`J2dpu7ps{6ap#roOy`XV={or__IKU?znY_Url!?>(p#7{E;;M*B#1gGYmx4aDw+^JCAf{ymOJ~FsD(9!?29L7Jvo2StHPUz(S=73<D6B38SQJVZdi0U784>}a&WR#c*Bp;w%7fhJzQJiZtYFEa?hzF7X%c(uP)>Ur<Y&|(=7c>w8141wMn-louc!^JJe!;zcYm3iUsJ%^D6+(vlygs5iN(?%jw#hJPS~YAEr(gtja6r|iCg;WULV{7o4NC%X5Lz&~SJ&{Im^|`0ifBCM3A8S>=~EkgeJgzps!_B~_s7|2pz;{>+IahwW9W*}iZf(@9mF_k6$`U31^H@&K*0Xxk22b;E!lWkC?`T6Gc5joWI(+KcSli)jEv4V$ebZ1rTBvjv#h07ELQ-cD9{4MT1IGai2hAi5W7x;yImezuv{w2Ef1SR#i^9r0TF%Q$vxUzTc~%@@LyLxUpk>q_v0kR3&E)ZBJeOrhoiSR9q^f1U-0B*1IIkDpF-B3ugt3?gb3PooM+&ZN!SniQ<&Qffo>PpvFFA<m_uaYG%J)~<#}-78zW59fpl9WrI{%ooYwG;&Ja&|IECK=Gq58YQkL_PCmqDbA<{BN3@Zq?yEHCUm1JVbr!XpU3>>aq2;Z?3z~SV<8JYn<l{U3g^g8N=B=vS?oWdofGA2^DeBEMCXuW&Rm5O{Pks(%m)$L6g9M?>(I=gP9zEN|x--jfjwx7U~B$dEwZ*>s3W47A<d__PB07Q@8sn!<`Vbb1a0hU<ECR<eiDRoE(OJu}>O#@6A2lpPIj)3q3tFc0tA(<Wq5W3O@)koCGKWBJ7&SGo$gzdPAYw!HqBPZ--!}U1|KXE#N63Oougg;qLpBDDE=19~r93~GB`pQ2zXc&VbsDk-i&h_vUHqKQX2>29k*37g!*O4R5?jsx1<dukg#>&?Y`t%{7b;3e?ulLy1omckCi6`i*AM3x^*1YgDH~Fgdft8Yg?|c5u&*jbB#{u8BCLmn)oYK6Un1p8q<QX(mcf6kPqqLZMhW%~+hl%Z>EacA}`YfW@vktd-;jY%$xjbXP#WV~~>+5PrDFgkh+QYDWHHgtBM>^ofz`l|kH=)ht)23ap6z+Kg2;AcUWOU}LExvpzgQh!F9uiT^w#h1Ova6esB@IG=)+hrvh_X40-|qaRu?laVP3g|pTM*X<ymWRc3oU0uuQb^zRtEfE2x~VwDN#cwq^46?b?DEBjQzOl>D}~aAO7>Bm`PJKJTGdWbDgG~oT5>#4ntec*##9#mTe^M@D;=y38>{M(**hqXGCs)p=x!5rZ`Kk9Ecktn257Ri5ea}7><`D(>d}1c;U6RMA@QHUpw1Ow0~q%!3H6qYN7R{Fa5PFaA5ir+d234Hm<@Z)&r955L|5}LGNxjzUML|tjOC|Zs14O+|-U%8YosBv1B;qm^I(8`?_9_tfR?=$JWJp@h?jKtZMPC>|$|{9xRci73N2QMiiF@S%deL%hESRHm4)pq2)ea2>RO}-jq^07urhF_qAwS*qP+g?&KSOMbU_$G0ezPQ`dI|@7PW4Mdb`&d}52}tI!#(5Fjtk>((@JLfluhr>Y*Ytg{u{XmD#L2>h4lz85aac`BG9m1&9*Uq0p90Ws11vcmi|c9FARvc?)OPmy_G)wu!y8lRYDuH^kWg1=J+`qeo}4DDHWcmOT2WCj#}bT9TtjIOaDq+|y`Xrh}fU|{3^_q1MEac(ZW86q4FK9hpw;)f_h;DW{Cjs+VC`ei>jqwLQB-;!C2Zsj1|S5gN{z~Mh-scS7uA~ugSfq?ahfT|Y{EZjhdhzo0g5dkp!Io#Q;IVK+MlF|+G_aF_t`GjQT%K-z3EG9xFB}w(Bn71DhK^bYcoIcv=(Ezg<IUrS+abG|jxXjO4@ue7*<0@)R7X3*pk&sw~Im4DecF^{p=KT`V0V{yL(Fc@U4+K`0Vf1G><)?}HoGT71!B5@%aAZXbB@C*5Z40gU7Gpt-pEo1C6>7%iQkN*TpBjQkbFtKmr=~}-9Q!EuPRMbGWsr8?7v&vOA*T&`^k%}=p*;seN;Hzru3qiGe80saW3Y|=!b2V0%Hwe9ae}?EYIUP7MhdJ8&@zA3-<MU+p6rO>*00*O+U!y}|KcIb0Hh9oZY+$ZbCc|jdeSp#z|#T)`Jeb$pAV&(Pb#Rlq4|s<)gE?Z)LU)1e4WxX!``Y**x=JpYC)Er-~r=`C{Y=ExpP`L999a)tV-*5v`4YFa<Iy;6CGXx(0O`zj$O^AUf}W*5Ory=QV*oB<WEWE_%PQn{er&TR1K9FGWN_R<ATGa?ON*xV-}iZT<G-e&SDgd6EtDLbw1t&tz53=4V2plcBSON&$@zRB(OT885MB(k<_OLW8%kb)3Sb|X6@SV^Z>&D_hrp=AJ7PZnQLsLy1G_@r&v(Ry<~XtnxR6mKMkGS{=8D+1AtXXqnrKv`x--6BAke2zT-r8b03u(@!%_9e`czDaVcKWRvOJ18$>)m{gHin48N#sX&`jHd%w1i3walRC?F6)Ik_owt_3K{3SBWdyh^77_@EIgX9-iGwPI58@#EmW(NUNpjZs}q!oi7N<Pv^5WiV0))nB!A5sdTgd|ufNm7?*hSX;n!wpBg!qP0+CTV3yMJWslH6De$wXe-Z_Y#!96)(4C{?RQY{fwx7BM@-gleWF-=GKs0oJGbIa6)hxs-M8s8@uY(C>?}q)cR><&`Ho6l#+glrC1`mSA#oNw_+=n(@R=;_h7=C2!ME&{oHf}}UX&}sbTPi#LT=E52<+*Mzq~BnseWLFwZgu(`a)Fs7RRrhyowHvUg`Tq%3Z!ibE)MOQ1&Nqgsr$d3+U8orB#9r;P~Dk?1o+<yR-TMGHm6JRfcJP(W!LQ4m90?=l3^)>9gVDzU0>u|6{b=RY4&6Bo$VCvatcP5So18``bzbbidNp8O)%V>T-(DOj;V0&UvYMqbtr>Ea}+PTq4Sqgr)IME>I_<T7n-1hnkdX4zM|qC=NsRH4Jj!pioN&4koB)%dFHe@EG1<;ofvUoepjL(z+IZ+vITKAZyf=ddgxK@^hRQ!pKa$7NbbWWiVvjThVWawjK~~b_NT&&R387CPJCjR0A~-kg9+tWv$%49zx%IvGCT;R!vzhKyU~%Li+uWYl0+umP9{qduWeBDi66rzbwy}q)|3(H(gaY!|cyQ_&8?gpmza4apOQLi!@FTi%23>%?;h~KamRgcOiG(gtP{nSVKE7<!lGtX9G3~uSQ#FPBq;BPzl0<Mo9oby&(78`;6gbZ2y7Qxt@1li{b6ZWfX7{BhJ`7C||fwtdZxV!V#NT!@pZ1D*IZ5)grS}tJtl9B_6MCt7OSW?c<RjbkzZsKviGt&d6EL>@6H)pEWYV`<&D8xY+4kn2%%tThq+%O;>hD1>F-6jyB>O&tZDS%hN?kb1BF{N0C*D276HIod^y%9h>O67{6tv=dP6x$~+EV>d~jc6;rr>+QU<2l|X7^U|me1q68zJO)QFJ>JTl&4lw5Jk5x#vRiU?I(?k$Nx!GS21yY2nOV(n3ol@wNvGdi!o3+7R66vw<SHLf8N@`{ta2(j_DFTBcG$~I1VVc<Y=CIUTKL3|TR3C)X;xi&ays=qlXPbUNYy22<5c)gloD#-;;@7udk+sVJFl>Lsym%t4{oeQpn-5+rpv6&Q^I}*Um6h(BFmF2rjPXETZ%^nt#_f1EP-|$AuA|hE<4Qi6edvL{l^smzpH7uX*jMTs?>j&^R7DGcfG@gpCgZQ?Sr!827o0;M7B!)|dkR2c*B%6Mcj_(&<2?BlzxC<SuP80SkT&Ll_xLW*Jbzf<Om=b*xQ|);&`;1g{`Q+6iS!LhC+hkl)?lrP2lL+CeT$O;fo5mFog*~XfoYIsdDKfmC}nmRADX^D&+=)hbxg25WT0aX#IP8giU8|t9Akpg>mB}p`NP;;i0&Z$rff_yG*<ohI_cA|w1U3LB7^MdtHA6Thv4ax%sanIH8Dd5M8QTsNgV6j8fX|nEvo90PD5nS5+2tR{GBky<h+D{`QF9$_g~XFj2NBGTT<(Oz8?b2hUmajHf@})2nZ<(oOj9lgiq3W+5iVhMLsCj-B|brjd}wk)0240kzz4z9_<F=J7j|sAM5p4C=yPEb0taI=7)XUcUvN0&9WE|Uf(t~7-r~CYuw`sVG}*-_GdB`pgSJeLuD{|eP81A{~|3{7^~>9J_gAq*UDvXX)I_E*T6@z*}@61%}IY>5l2Y2A;XuKnc^@}z)jzA01FMv!v63^X=6~P8<TH<6z4d~-lCq!F#;QReH>sU_%7i8+fTA@I0?263_C9hwIKaN#JD;<q@w8VsT7#lYZ|72Y<eG+#`_4cU6pCbcnDfO;qTU-nx_JQa1drV1)dcP4fVP5^aH?`5$;ee`*nPO-SJw?fjN08pdxPuCR$C|d_gsKZjNM2VIpB2ClHzdCqJj>W7+5u*2fR$s~7@MCgm^_ifGPFo2V(jo~k$N&-?l9I3bVyQ_h9aW9e8FaBo=$5SIO6##?~0vzCdmnEy{Y0^#o!Qb5gm-BQ95ADc42IOK9bT#4L17d&o|_@#sZ&82^`?i#nTuGE83mr9CgyEbv!nDTE;Ur|-mIK0+@Xr1Dl*xs5fBjBVnK^WnX$)g$4wqAms7N}&@alA?XEJ(uA!I6QxO=>`+9+hoBZg`E<vwX?a=&PZ1{S0UmzPETdMNkJXT<35_G2d1`-BTRvm?%eR3ACTsf^EGoh+p<3#8ZB45M)Dd5acBtv4$QU%e>Z}&%Jpj_53+beoGQgrqpdf25v7rG9dlqH)LpKiZO5l`H@IP+mxG(EEQwaKYkaRkHyiyUSE6gz{hnGFl&i6<od-9<{=t&vo^%H7g7py1*gy+7Q)`~p2pVzZteMbT<Lh9;hGBfMnRLibqaXU@icH?BoV?k%6^&V1wov7MZCPs{b1<C#+JG21`MB#>}ee}5jj#TNB@u5rA;aZFu5qGMf5#CrD2%<TUM>FZC#(GWLN1yVc&$b5QxBPaY^gjT+A#;Y1a1~lHnzD3uEYaw3^lVE#-xshX<&a&7>@A=~;~N{mtb;MAY}OfMewDw`(5Szi+(DORXS;j6<2C`f^XvJZ;xeLOVu8^G$KVr%jo0YxkO>zeg-9({Lrw*W?yKgZ<nv?;>u3U)Skw2bG@*`5L{I&9@=`tL1$n)Fo9wU94~oB63vN+FeD8-|w!U7UU>JW7fSmrv@L<4+?sx3h|bQ7oka?v6PE38oYRr?#;PDX#UG!1g9I5yu;WXaZWaQ--9|ah=U+8;H1psIR2g4r`r8`SP3^%JZdcy+yWjyWJlGR^HK;s${|WMDE|TwOll%>wgHIC#XUvu#Vtv$@nfq{*om~m+sf=2S*KOa57Q3=YE7ww5UFBC@4W=>)DnJk9|_4f`=9IYw>_{%Wg~IJS$0G@bBV^FN6xhmO5z1pb6SSF)!YE|<{Qf{DP}*wbB=;v7tTnQ$YqmEusHze&YbLp4~iA5@X;~p$48&aOGD~c>u{nWKsk)!r!mUaxDBRpM!oS}=6uu%kcVR>8MsQyscb68tn`ljo$3!e5{uq#FcoFLP5}oOEci*)pQEV^?4Oh*u>zH7dJw2z*NoC?|5_bEQbg0G$1-+7w~Y$#5ulM(JRDT6kV9tz&0S08&l~n%2~5bB2EK7{uJj_jk-|xx@?MHjC89d3*oJ%kxu-f<MajLHe&lvdW9lt_Soii6nr04p5XRA>aF5ckgsOoaJGB~4(@S-Z;FaAtoaDtT2r%w8u;*CJ#IIcY8emqHHvCNlREZ890IIkPh51e--Y>9OCiSQY!%{!D`@;YB3D0%v+_yfY_j(2I0QoMuDZy;;K9gc*-o%6moB5poUm^)rQV&aLdu>GGMS81&wYW|0{twqJJd@Ge1Ig@24PZKGn&L!;G?u`4MQwY!>{&M=cPf?|GuSEEQ4Q(~bOG5|oT;4KhG~$&_@_9tm!%hE^8O{=?u=vM%F0f@4IVu6mzbi4<HCIfHV^qZFnz!b1eB9`9<WVrlKT?qkXe&gKC|SO=_tWDIhhom@x478KN1Z)8ti=Q(6WVt>R~;r9UWqiDSCyFr05+mnP}+P=(6aKc=n9$-PLT)A|jx&V5$ukxB5)uGfea57!_B<$$v`)nLUaXf6$WL+AaE7Ifbwvd`4UH<ne!7!nvretk7AM0wq2SSWhTX>MHuY{)_H+W3SnR5U^y_t_4GYzmrILAYQu}f<xbXn-JQ!O#G+uWW!?=R%%M_?20B6@owWq5a(<bcH#mYJ>xA;`ASZV?Wu=YawPIz({8*tF+)~1A(Z!p^lnCBnc?oNV2RquQ8ImlEN2Eva|e1pdbc0d4|_4@htY1$l}<TpvXjzc5Ep}z@)SSK!w_Tnd9l$UocGcZO{4dn=gED)FgF|6QP{N6+@#iuAz17pc7t=MzF8uSViSB1#DiNQe5>+sLKU>rVlc<@Pd0crakw1l5fnmmUrIiqqIcd=CrON4f`U}+Sj2w2O}1lkreI;f(tT`*a#A8$VPtR-B=dMCko<WtGPr_8O3Hu9NppylViW??s)KhSVt;vYo-0$LFMBFfUNpfOVSRO6NpotLk#&M4!i1S$F#6LmruGgpi*yo^FdV{TC~AOgbzsW~`9l4aToi&xg4%&=r6UuinqrTQazmAAUs6G3@$-|w5_)QCf`Q6u2Zu@Vp<lBNQGC>U`XuKlFg^k>!EkbLVS-R3N35bVQVFJ!oq*D1q9${2lz};^g2^+~6=~CDj2VD%VS{La?*g*HSUH-RO6=4`afDi#RibfGXz`C|Qhbo~VT8PCMIQO#rQ?%%jSkARF61ZaxQX>r0a;Tp5p+s(A>)ArUuhjFN%Dzu>Rsw@q9K9SU77)AU6T=>fO75%V)PnlkwO', c1='88f9c5795fdac65b', c2='6a4e488b048e43ed'):
    try:
        # 完整性校验
        if hashlib.sha256(data.encode()).hexdigest()[:16] != c1:
            raise ValueError('Primary integrity check failed')
            
        # 解密过程
        stage1 = base64.b85decode(data)
        if hashlib.blake2b(stage1).hexdigest()[:16] != c2:
            raise ValueError('Secondary integrity check failed')
            
        stage2 = custom_decode(stage1)
        stage3 = zlib.decompress(stage2)
        return marshal.loads(stage3)
    except Exception as e:
        raise RuntimeError(f'Decryption failed: {str(e)}')

# 执行解密后的代码
exec(decrypt())
